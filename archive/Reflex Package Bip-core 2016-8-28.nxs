{"name":"bip-core","enabled":true,"description":"Core package for basic Achaea functionality","type":"group","id":1,"items":[{"type":"function","name":"README-DOCUMENTATION","enabled":true,"id":3,"code":"FIRST\n-----\nAfter installing this package, save your client settings, exit the game, and log back in.\n** This package only works properly once the onLoad function initializes your variables, which happens upon login. **\n\n                                                                      \nAbout - BIP-CORE 1.4\n--------------------\nThis Reflex Package has been created by Bip as the core module of his system. Non-profit use, modification, and distribution are allowed as long as this notice of authorship and authorized distribution appears in this module as distributed without modification. The rest of the package can be modified freely.\n\nBIP-CORE was designed to demonstrate several methods of HTML5 client coding for Achaea players so it can be expanded upon as desired. There are functions that are inefficient for the sole purpose of demonstration of concepts (nested loops, If-Else chains, etc). Some, but not all, of these will be improved upon in the future as time or functionality warrants.\n    \nThe BIP-CORE Achaea System is provided at no cost. Feel free to say hello to me, however, in Achaea! Feedback is also welcome in-game.\n    \nAs of this version, continuing development is still planned, based on feedback received. If you appreciate the work that went into this module, in-game donations to Bip are welcome but absolutely not necessary. You are encouraged to give your own try at developing compatible packages and extending the systems implemented here to your needs. And, feedback to extend BIP-CORE to support other functionality in extensions (such as for individual classes) is very welcome.\n\n\nFeatures\n--------\n\n    Aliases\n        - Useful aliases, such as \"afk\" for disappearing into a journal, \"st\" to set target, and to use Tattoos.\n    \n    Auto-learn Acceptance\n        - Automatically accepts requests from other adventurers to learn from you.\n        - Contains logic to highlight the line notifying you when you earn free lessons.\n\n    Auto-loot for Coins\n        - Automatically loots gold sovereigns dropped after you kill a denizen or adventurer.\n        - Use alias \"autoloot\" to enable or disable. Default enabled.\n        - Automatically prevented if someone else got the killing shot.\n            \n    Automatic Leader Target Switching\n        - Set the leader that controls your target with alias \"at <leader>\". Disable with \"at none\".\n        - Automatically switches target selected when the set leader indicates a new target in partytalk channel.\n        - Allows for multiple common formats for leader-selected target switching.\n\n    Manual Fleeing\n        - Uses aliases \"flee\" and \"flee <direction>\"\n        - Standard movement to direction if specified; if not specified, starts north on compass, goes clockwise, up, down, in, then out checking for exits.\n        - Pulls exit information from variable exitList\n\n    Player Name Colors by City\n        - Use the \"pc\" alias (Process City) to update the list of players and the city of which they are a citizen.\n        - All instances of the player's name will be colorized on the main console window as the color representing the city.\n        - Use aliases \"SaveCities\" and \"LoadCities\" to save to/load from permanent variables and \"ResetCities\" to reset all city data to empty.\n        - Use aliases \"CityAdd <city> <adventurer\" and \"CityDel <adventurer>\" to manually add/remove city memebrship for an adventurer.\n        - Use alias \"CityMaint\" for city data maintenance - removal of duplicate citizen entries.\n        - Use alias \"CityList\" to display list of all known members of all cities.\n                              \nAliases\n-------\n    \n    Text:        afk\n    Performs:    write journal\n    Requires:    A journal in your inventory.\n    Purpose:     Shortcut to write to a journal in your inventory, causing you to disappear.\n    NOTES:       Must be at full health and mana. Warning - using this to escape from combat or danger is punishable by the gods!\n\n    Text:        autoloot\n    Performs:    Enables or disables gold sovereign auto-loot feature functionality. Autoloot is enabled by default.\n    Purpose:     Automatically loots gold soveeigns dropped by denizens or adventures you kill.\n    NOTES:       If someone else gets the kill it will not loot the resulting gold (if any).   \n            \n    Text:        flee  or  flee <direction>\n    Performs:    Standard movement in specified direction; If not specified, first of n, ne, e, se, s, sw, w, nw, u, d, in, out available.\n    Purpose:     Escape from combat quickly.\n\n    Text:        st\n    Performs:    Cycles targets through all non-guard denizens in your current room.\n    Purpose:     Easy denizen targetting, particularly for mobile devices without TAB keys.             \n        \n    Text:        st <newtarget>\n    Performs:    settarget <newtarget>\n    Purpose:     Shortcut to set your target. Use \"st none\" to clear your target.\n    NOTES:       Partial names target local denizens, players, or non-existing entities otherwise. \n                 Searches for denizen target in local room before doing generic 'settarget' server-side.\n                 If not in local room, need to type out the whole name or it will target a possibly\n                 non-existing entity.          \n                     \n    Text:        Tattoos (various)\n    Performs:    Touches or relaxes various tattoos, if you have them. Targets current target if applicable.\n    Format:      t (to touch touch) or r (to relax) & first 4 letters of the tattoo. Examples: tmind, tboar, tox, thamm, rmind\n\n\nVariables\n---------\n\nThese are some useful variables. For the full set of global variables, take a look at the onLoad function for their initializations.    \n\n    Variable:    exitList\n    Purpose:     Keeps track of all known exits from the current room.\n    Example:     { \"n\": 40484, \"w\": 4389 }\n    Format:      { \"direction\": roomnumber }\n\n    Variable:    roomPlayers\n    Purpose:     Keeps track of all known players in a room. \n    Example:     [ { \"name\": \"Bip\", \"fullname\": \"Bip\" } ]\n    Known issues: Does not take into account some methods of entering or exiting, such as wings (Duanathar), entering/exiting a subdivision.        \n        \n    Variable:    roomInfo\n    Purpose:     Keeps track of all items in a room. \n    Example:     {\"location\":\"room\",\"items\":[{\"id\":\"11224\",\"name\":\"a sewer grate\",\"icon\":\"door\"},{\"id\":\"78396\",\"name\":\"a runic totem\",\"icon\":\"rune\"},{\"id\":\"23609\",\"name\":\"a black executioner's hood\",\"icon\":\"clothing\",\"attrib\":\"t\"}]}\n     \n                                               \n    Variable:    selfStatus\n    Purpose:     Keeps track of the player's current status\n    Example:     {\"health\":\"3540\",\"mana\":\"4873\",\"afflist\":[],\"rage\":[0,0,0,0,0,0,0],\"name\":\"Bip\",\"fullname\":\"Bip, the cultist\",\"age\":\"23\",\"race\":\"Grook\",\"specialisation\":\"Scholar\",\"level\":\"81 (13%)\",\"xp\":\"13%\",\"xprank\":\"646\",\"class\":\"Occultist\",\"city\":\"Ashtan (1)\",\"house\":\"The Esoteric Consortium(4)\",\"order\":\"(None)\",\"boundcredits\":\"0\",\"lessons\":\"350\",\"explorerrank\":\"a Nomad\",\"mayancrowns\":\"0\",\"boundmayancrowns\":\"0\",\"gold\":\"7825\",\"bank\":\"60000\",\"unread_msgs\":\"0\",\"unread_news\":\"0\",\"target\":\"None\",\"gender\":\"male\",\"unboundcredits\":\"0\"}\n    Format:      All variables from Char.Status (see game GMCP notes), plus health, mana, afflist[] for affliction list and rage[] for rage variables.\n    NOTES: Rage[0] is the current rage amount. Rage[1] through rage[5] use 0 for not enough rage, 1 for available to use, and COOLDOWN for a rage skill in cooldown status.\n                                                                                                 \n    Variable:    combatenabled     (***CURRENTLY NOT USED IN CORE PACKAGE, AVAILABLE TO BE INTEGRATED INTO CLASS PACKAGE***)\n    Purpose:     0 if Auto-PVE combat (bashing) is disabled, 1 if Auto-PVE combat (bashing) is enabled.\n    Example:     0\n    Format:      0 or 1                                                                                              \n    \n    Variable:    PVPstatus         (***CURRENTLY NOT USED IN CORE PACKAGE, AVAILABLE TO BE INTEGRATED INTO CLASS PACKAGE***)\n    Purpose:     0 if PVP combat (bashing) is disabled, 1 (or another value) if PVP combat (bashing) is enabled.\n    Example:     0\n    Format:      0 or 1                                                                                              \n    \n                    \n        \nChange Log\n----------\n    \n1.4  (2016-8-28)\n   Fixed bug with name coloring that would cause apostrophes (for example, 's) to prevent the name from being colored appropriately.\n   Updated alias \"CityMaint\" to automatically remove invalid entries (names with more than one word) caused by text activity during \"pc\" (ProcessCities) data gathering.\n                                                              \n1.3  (2016-8-27)\n   Alias \"st\" without parameter now cycles through non-guard denizens in the current room (suggested by Archcypher, improves mobile device targetting\n   Updated alias \"CityMaint\" to alphabetize city membership lists in addition to removing names that are in multiple lists.\n   Updated alias \"st <target>\" to not take uppercase/lowercase target into account - it will work either way.\n    \n1.2  (2016-8-26)\n   Updated Scan Everyting function to prevent colorizing partial names in words (ex, Cyr / Cyrene)\n   Change Cyrene default color from blue to cornflowerblue (lighter).\n   Added alias \"CityList\" to display all current known members of cities.\n   Added variable roomInfo, which keeps track of all items and denizens in a room and their attributes\n   Modified alias \"st\" to first find denizen in local room to target. If no match, uses generic settarget.\n\n1.1  (2016-8-24)\n   Updated alias \"pc \"(process cities) handling to process city members with fewer than 3 members visible.\n   Added alias \"CityAdd <city> <adventurer>\" to manually add an adventurer to a city.\n   Added alias \"CityDel <adventurer>\" to manually remove an adventurer from all cities.\n   Added alias \"CityMaint\" to remove adventurers that are listed in more than one city as a citizen.\n    "},{"type":"function","name":"onLoad","enabled":true,"id":31,"code":"// SELF STATUS\nrageStatusTemp = [0, 0, 0, 0, 0, 0, 0];\nselfStatTemp = {health:0, mana:0, afflist:[], rage:rageStatusTemp, name:\"\", fullname:\"\", age:0, race:\"\", specialisation:\"\", level:0, xp:0, xprank:0, class:\"\", city:\"\", house:\"\", order:\"\", boundcredits:\"\", lessons:0, explorerrank:0, mayancrowns:0, boundmayancrowns:0, gold:0, bank:\"\", unread_msgs:0, unread_news:0, target:\"\", gender:\"\"};\nset_variable('selfStatus', selfStatTemp);\n\n// ROOM INFO\nset_variable('roomStatus', \"\");\n\n// COMBAT TARGET\nset_variable('tar', 0);\n\n// AUTO-TARGET LEADER\nset_variable('atLeader', 0);\n\n// PVE/PVP COMBAT TOGGLE\nset_variable('combatenabled', 0);\nset_variable('PVPstatus', 0);\n\n// AUTOLOOT\nset_variable('autolootDisabled', 0);\nset_variable('otherGoldLoot', 0);\n\n// PLAYER NAME COLORATION BY CITY\ncityMembersTemp = {ashtan:[], cyrene:[], eleusis:[], hashan:[], mhaldor:[], targossas:[]};\nset_variable('cityMembers', cityMembersTemp);"},{"type":"function","name":"onGMCP","enabled":true,"id":2,"code":"//START OF ROOM EXITS TRACKING  \nif (args.gmcp_method == \"Room.Info\") \n{ \n    set_variable('exitList', args.gmcp_args.exits); \n}\n//END OF ROOM EXITS TRACKING\n\n//START PLAYERS IN ROOM TRACKING\nelse if (args.gmcp_method == \"Room.Players\") \n{\n    set_variable('roomPlayers', args.gmcp_args);\n}\nelse if (args.gmcp_method == \"Room.AddPlayer\") \n{ \n    currentPlayers = get_variable('roomPlayers');    \n    currentPlayers.push(args.gmcp_args);\n    set_variable('roomPlayers', currentPlayers);\n}\nelse if (args.gmcp_method == \"Room.RemovePlayer\") \n{ \n    currentPlayers = get_variable('roomPlayers');\n    newArray = currentPlayers.filter(function (person) {return person.name == args.gmcp_args});\n    spliceLoc = currentPlayers.lastIndexOf(newArray[0]);\n    if (spliceLoc != -1)\n        {\n          currentPlayers.splice(spliceLoc, 1);          \n          set_variable('roomPlayers', currentPlayers);\n        }\n\n}\n//END OF PLAYERSIN ROOM TRACKING\n\n//BEGIN SELF AFFLICTION TRACKING\nelse if (args.gmcp_method == \"Char.Afflictions.List\")\n{\n    // SET CURRENT AFFLICTIONS\n    selfStat = get_variable('selfStatus');\n    \n    selfStat.affList = [];\n    for (affCount = 0; affCount < args.gmcp_args.length; affCount++)\n    {\n        selfStat.afflist.push(args.gmcp_args[affCount].name);\n    }\n    \n    set_variable('selfStatus', selfStat);   \n}\nelse if (args.gmcp_method == \"Char.Afflictions.Add\")\n{    \n    // ADD AFFLICTIONS TO LIST\n    selfStat = get_variable('selfStatus');\n    selfStat.afflist.push(args.gmcp_args.name);\n    set_variable('selfStatus', selfStat); \n}\nelse if (args.gmcp_method == \"Char.Afflictions.Remove\")\n{\n    // REMOVE AFFLICTIONS FROM LIST\n    selfStat = get_variable('selfStatus');\n    affLoc = selfStat.afflist.indexOf(args.gmcp_args[0]);\n    if (affLoc != -1)\n        selfStat.afflist.splice(affLoc, 1);       \n    set_variable('selfStatus', selfStat);\n}\n//END SELF AFFLICTION TRACKING\n\n//BEGIN GENERAL CHARACTER STATUS TRACKING\nelse if (args.gmcp_method == \"Char.StatusVars\")\n{\n\n    // DO NOT NEED THIS DATA AT THIS TIME\n    \n}\nelse if (args.gmcp_method == \"Char.Status\")\n{\n    \n    selfStat = get_variable('selfStatus');\n       \n    keys = Object.keys(args.gmcp_args);    \n    \n    for (keyCount = 0; keyCount < keys.length; keyCount++)\n    {\n\n      selfStat[keys[keyCount]] = args.gmcp_args[keys[keyCount]];\n      \n    }\n\n    set_variable('selfStatus', selfStat);\n\n}\n//END GENERAL CHARACTER STATUS TRACKING\n\n//BEGIN ROOM INFORMATION TRACKING\nelse if  (args.gmcp_method == \"Char.Items.List\")\n{\n \n  if (args.gmcp_args.location == \"room\")\n   set_variable(\"roomStatus\", args.gmcp_args);\n          \n                 \n}\nelse if  (args.gmcp_method == \"Char.Items.Add\")\n{   \n    if (args.gmcp_args.location == \"room\")\n    {\n        roomStat = get_variable(\"roomStatus\");       \n        roomStat.items.push(args.gmcp_args.item);\n        set_variable('roomStatus', roomStat);\n    }        \n}\nelse if  (args.gmcp_method == \"Char.Items.Remove\")\n{\n    \n   if (args.gmcp_args.location == \"room\")\n    {\n        roomStat = get_variable(\"roomStatus\");\n        \n        for (itemCount = 0; itemCount < roomStat.items.length; itemCount++)\n            if (roomStat.items[itemCount].id == args.gmcp_args.item.id)\n            {\n                roomStat.items.splice(itemCount, 1);\n                break;\n            }\n       set_variable('roomStatus', roomStat); \n    }\n}\n//END ROOM INFORMATION TRACKING"},{"type":"group","name":"Aliases","enabled":true,"id":11,"items":[{"type":"alias","name":"afk - write to journal","enabled":true,"id":4,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"write journal","prefix_suffix":true}],"text":"afk"},{"type":"alias","name":"st target - set new target","enabled":true,"id":12,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here                                                                       \nroomStat = get_variable('roomStatus');\nnewTarget = args[1].toLowerCase();\nfoundTarget = false;\n\n//check local targets first, in room\nfor (itemCount = 0; itemCount < roomStat.items.length; itemCount++)\n{\n    \n    if ((roomStat.items[itemCount].id.indexOf(newTarget) != -1) || (roomStat.items[itemCount].name.toLowerCase().indexOf(newTarget) != -1))\n    {//MATCHED ID OR NAME\n\n       if (Object.keys(roomStat.items[itemCount]).indexOf(\"attrib\") != -1)\n        {//HAS ATTRIBUTES KEY\n\n            if (roomStat.items[itemCount].attrib.indexOf('m') != -1)\n             {//ITEM IS MONSTER\n                 client.print(\"SetTarget: Target set to \" + roomStat.items[itemCount].name + \".\", \"orange\"); \n                 send_command(\"settarget \" + roomStat.items[itemCount].id);\n                 foundTarget = true;\n                 break;\n             }\n            \n        }\n\n    }\n\n}\n\nif (foundTarget == false)\n    send_command(\"settarget \" + newTarget);"}],"text":"st <newtarget>"},{"type":"alias","name":"st - cycle through all monster-denizens","enabled":true,"id":82,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"roomStat = get_variable('roomStatus');                                                                     \ncurrentTarget = get_variable('tar');\n\nitemListPos = -1;\n\ndenizenList = [];\n\nfor (itemCounter = 0; itemCounter < roomStat.items.length; itemCounter++)\n{\n    if (Object.keys(roomStat.items[itemCounter]).indexOf(\"attrib\") != -1)\n        {//HAS ATTRIBUTES KEY\n\n            if ((roomStat.items[itemCounter].attrib.indexOf('m') != -1) && (roomStat.items[itemCounter].attrib.indexOf('x') == -1))\n            {//ITEM IS MONSTER, NOT A GUARD\n               denizenList.push(roomStat.items[itemCounter]);\n            } \n        }\n        \n}\n                                \n\n\nfor (itemCounter = 0; itemCounter < denizenList.length; itemCounter++)  \n{   \n   if (denizenList[itemCounter].id == currentTarget)\n       itemListPos = itemCounter;\n}\n\n                \nif (denizenList.length == 0)\n{\n    client.print(\"SetTarget: No non-guard denizens found in room.\", \"orange\"); \n    \n}\nelse if ((itemListPos == -1) || (itemListPos == denizenList.length-1))\n{//Target not found in room or is last denizen in room, set to first item\n    \n    client.print(\"SetTarget: Target set to \" + denizenList[0].name + \".\", \"orange\"); \n    send_command(\"settarget \" + denizenList[0].id);\n}\nelse\n{//Target is in middle of list - set to next one.\n\n    client.print(\"SetTarget: Target set to \" + denizenList[itemListPos+1].name + \".\", \"orange\"); \n    send_command(\"settarget \" + denizenList[itemListPos+1].id);\n    \n}\n\n"}],"text":"st"},{"type":"group","name":"Tattoos","enabled":true,"id":39,"items":[{"type":"alias","name":"tfire","enabled":true,"id":42,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch firefly","prefix_suffix":true}],"text":"tfire"},{"type":"alias","name":"tmoss","enabled":true,"id":43,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch moss","prefix_suffix":true}],"text":"tmoss"},{"type":"alias","name":"tfeat","enabled":true,"id":44,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch feat","prefix_suffix":true}],"text":"tfeat"},{"type":"alias","name":"tshie","enabled":true,"id":45,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch shield","prefix_suffix":true}],"text":"tshie"},{"type":"alias","name":"tmind","enabled":true,"id":46,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch mindseye","prefix_suffix":true}],"text":"tmind"},{"type":"alias","name":"thamm","enabled":true,"id":47,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch hammer @tar","prefix_suffix":true}],"text":"thamm"},{"type":"alias","name":"tcloa","enabled":true,"id":48,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch cloak","prefix_suffix":true}],"text":"tcloa"},{"type":"alias","name":"tbell","enabled":true,"id":49,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch bell","prefix_suffix":true}],"text":"tbell"},{"type":"alias","name":"tcrys","enabled":true,"id":50,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch crystal","prefix_suffix":true}],"text":"tcrys"},{"type":"alias","name":"tmoon","enabled":true,"id":41,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch moon","prefix_suffix":true}],"text":"tmoon"},{"type":"alias","name":"tstar","enabled":true,"id":51,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch starburst","prefix_suffix":true}],"text":"tstar"},{"type":"alias","name":"rstar","enabled":true,"id":52,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal relax starburst","prefix_suffix":true}],"text":"rstar"},{"type":"alias","name":"tboar","enabled":true,"id":40,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch boar","prefix_suffix":true}],"text":"tboar"},{"type":"alias","name":"tweb","enabled":true,"id":53,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch web @tar","prefix_suffix":true}],"text":"tweb"},{"type":"alias","name":"ttent","enabled":true,"id":54,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch tentacle @tar","prefix_suffix":true}],"text":"ttent"},{"type":"alias","name":"thour","enabled":true,"id":55,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch hourglass @tar","prefix_suffix":true}],"text":"thour"},{"type":"alias","name":"tbraz","enabled":true,"id":56,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch brazier @tar","prefix_suffix":true}],"text":"tbraz"},{"type":"alias","name":"tpris","enabled":true,"id":57,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch prism @tar","prefix_suffix":true}],"text":"tpris"},{"type":"alias","name":"ttree","enabled":true,"id":58,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch tree","prefix_suffix":true}],"text":"ttree"},{"type":"alias","name":"tmega","enabled":true,"id":59,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch megalith","prefix_suffix":true}],"text":"tmega"},{"type":"alias","name":"tox","enabled":true,"id":60,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch ox","prefix_suffix":true}],"text":"tox"},{"type":"alias","name":"tcham","enabled":true,"id":61,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch chameleon @tar","prefix_suffix":true}],"text":"tcham"},{"type":"alias","name":"rcham","enabled":true,"id":62,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"command","command":"queue add eqbal touch chameleon me","prefix_suffix":true}],"text":"rcham"}]}]},{"type":"group","name":"Feature - Auto-learn acceptance","enabled":true,"id":7,"items":[{"type":"trigger","name":"Lesson earned highlight","enabled":true,"id":6,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Congratulations, you have been awarded a free lesson for your teaching efforts!","actions":[{"action":"highlight","highlight":"line","highlight_backref":"1","highlight_fg":"#ffff00","highlight_bg":"#000000"}]},{"type":"trigger","name":"Auto-learning accept","enabled":true,"id":5,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"<target> has requested that you share some of your knowledge of <param2> with <param3>. 'OK' to commence the lesson.","actions":[{"action":"command","command":"OK"}]}]},{"type":"group","name":"Feature - Autoloot","enabled":true,"id":34,"items":[{"type":"trigger","name":"AutoLoot","enabled":true,"id":35,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"sovereigns spills from the corpse.","actions":[{"action":"script","script":"autolootStatus = get_variable(\"autolootDisabled\");                               \notherLooter = get_variable('otherGoldLoot');\n\nif (autolootStatus == 0)\n{    \n    if (otherLooter == 1)\n    {\n        set_variable('otherLooter', 0);\n    }\n    else                \n    {\n      send_command(\"queue add eqbal get coins\");\n    }\n}"}]},{"type":"trigger","name":"You got the kill","enabled":true,"id":38,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"You have slain","actions":[{"action":"variable","varname":"otherGoldLoot","valtype":"value","value":"0","op":"set"}]},{"type":"trigger","name":"Other person got kill","enabled":true,"id":37,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"has been slain by","actions":[{"action":"variable","varname":"otherGoldLoot","valtype":"value","value":"1","op":"set"}]},{"type":"alias","name":"autoloot - Toggles autoloot","enabled":true,"id":36,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"//Enter the script here                                                                            \nautolootStatus = get_variable('autolootDisabled');\n\nif (autolootStatus == 1)\n{//Autoloot is disabled - enable it\n    autolootStatus = 0;\n    client.print(\"Autoloot enabled.\", \"blue\");\n}\nelse\n{//Autoloot is enabled - disable it\n    autolootStatus = 1;\n    client.print(\"Autoloot disabled.\", \"blue\");\n}\n\nset_variable('autolootDisabled', autolootStatus);\n"}],"text":"autoloot"}]},{"type":"group","name":"Feature - Automatic Leader Target Switching","enabled":true,"id":72,"items":[{"type":"alias","name":"at newleader - Select auto-target leader","enabled":true,"id":73,"matching":"begins","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"variable","varname":"atLeader","valtype":"variable","value":"newleader","op":"set"},{"action":"notify","notice":"Autotarget leader set to @newleader","notice_fg":"#ff0000","notice_bg":"#000000"}],"text":"at <newleader>"},{"type":"trigger","name":"Auto-target set 1","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":false,"text":"(Party): <leader> says, \"TARGET <newtarget>.\"","actions":[{"action":"if","cond-type1":"variable","cond-val1":"leader","cond-type2":"variable","cond-val2":"atLeader","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"settarget @newtarget"},{"action":"command","command":"pt TARGETTING @newtarget"}]},{"type":"trigger","name":"Auto-target set 2","enabled":true,"id":74,"matching":"exact","whole_words":true,"case_sensitive":false,"text":"(Party): <leader> says, \"TARGET: <newtarget>.\"","actions":[{"action":"if","cond-type1":"variable","cond-val1":"leader","cond-type2":"variable","cond-val2":"atLeader","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"settarget @newtarget"},{"action":"command","command":"pt TARGETTING @newtarget"}]},{"type":"trigger","name":"Auto-target set 3","enabled":true,"id":76,"matching":"exact","whole_words":true,"case_sensitive":false,"text":"(Party): <leader> says, \"Target changed to <newtarget>.\"","actions":[{"action":"if","cond-type1":"variable","cond-val1":"leader","cond-type2":"variable","cond-val2":"atLeader","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"settarget @newtarget"},{"action":"command","command":"pt TARGETTING @newtarget"}]},{"type":"trigger","name":"Auto-target set 4","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":false,"text":"(Party): <leader> says, \"Target changed to: <newtarget>.\"","actions":[{"action":"if","cond-type1":"variable","cond-val1":"leader","cond-type2":"variable","cond-val2":"atLeader","cond-op":"eq","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"command","command":"settarget @newtarget"},{"action":"command","command":"pt TARGETTING @newtarget"}]}]},{"type":"group","name":"Feature - Manual Fleeing","enabled":true,"id":9,"items":[{"type":"alias","name":"flee direction","enabled":true,"id":8,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"clearqueue eqbal","prefix_suffix":true},{"action":"command","command":"queue add eqbal @direction","prefix_suffix":true},{"action":"variable","varname":"combatenabled","valtype":"value","value":"0","op":"set"}],"text":"flee <direction>"},{"type":"alias","name":"fl direction","enabled":true,"id":66,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"command","command":"clearqueue eqbal","prefix_suffix":true},{"action":"command","command":"queue add eqbal @direction","prefix_suffix":true},{"action":"variable","varname":"combatenabled","valtype":"value","value":"0","op":"set"}],"text":"fl <direction>"},{"type":"alias","name":"flee","enabled":true,"id":10,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('exitList')['n'] != undefined) {\n    send_command('queue prepend eqbal n');\n} else if (get_variable('exitList')['ne'] != undefined) {\n    send_command('queue prepend eqbal ne');\n} else if (get_variable('exitList')['e'] != undefined) {\n    send_command('queue prepend eqbal e');\n} else if (get_variable('exitList')['se'] != undefined) {\n    send_command('queue prepend eqbal se');\n} else if (get_variable('exitList')['s'] != undefined) {\n    send_command('queue prepend eqbal s');\n} else if (get_variable('exitList')['sw'] != undefined) {\n    send_command('queue prepend eqbal sw');\n} else if (get_variable('exitList')['w'] != undefined) {\n    send_command('queue prepend eqbal w');\n} else if (get_variable('exitList')['nw'] != undefined) {\n    send_command('queue prepend eqbal nw');\n} else if (get_variable('exitList')['u'] != undefined) {\n    send_command('queue prepend eqbal u');\n} else if (get_variable('exitList')['d'] != undefined) {\n    send_command('queue prepend eqbal d');\n} else if (get_variable('exitList')['in'] != undefined) {\n    send_command('queue prepend eqbal in');\n} else if (get_variable('exitList')['out'] != undefined) {\n    send_command('queue prepend eqbal out');\n}\nset_variable('combatenabled', 0);"}],"text":"flee"},{"type":"alias","name":"fl - flee","enabled":true,"id":67,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"if (get_variable('exitList')['n'] != undefined) {\n    send_command('queue prepend eqbal n');\n} else if (get_variable('exitList')['ne'] != undefined) {\n    send_command('queue prepend eqbal ne');\n} else if (get_variable('exitList')['e'] != undefined) {\n    send_command('queue prepend eqbal e');\n} else if (get_variable('exitList')['se'] != undefined) {\n    send_command('queue prepend eqbal se');\n} else if (get_variable('exitList')['s'] != undefined) {\n    send_command('queue prepend eqbal s');\n} else if (get_variable('exitList')['sw'] != undefined) {\n    send_command('queue prepend eqbal sw');\n} else if (get_variable('exitList')['w'] != undefined) {\n    send_command('queue prepend eqbal w');\n} else if (get_variable('exitList')['nw'] != undefined) {\n    send_command('queue prepend eqbal nw');\n} else if (get_variable('exitList')['u'] != undefined) {\n    send_command('queue prepend eqbal u');\n} else if (get_variable('exitList')['d'] != undefined) {\n    send_command('queue prepend eqbal d');\n} else if (get_variable('exitList')['in'] != undefined) {\n    send_command('queue prepend eqbal in');\n} else if (get_variable('exitList')['out'] != undefined) {\n    send_command('queue prepend eqbal out');\n}\nset_variable('combatenabled', 0);"}],"text":"fl"}]},{"type":"group","name":"Feature - Player Name Color by City","enabled":true,"id":29,"items":[{"type":"alias","name":"pc - ProcessCities","enabled":true,"id":28,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"if","cond-type1":"variable","cond-val1":"gagall","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"dothen":"stop","doelse":"continue","dothenlabel":"","doelselabel":""},{"action":"notify","notice":"Processing city members.","notice_fg":"#1b00ff","notice_bg":"#000000"},{"action":"variable","varname":"gagall","valtype":"value","value":"1","op":"set"},{"action":"command","command":"qw ashtan","prefix_suffix":true}],"text":"pc"},{"type":"trigger","name":"End QW","enabled":true,"id":27,"matching":"substring","whole_words":true,"case_sensitive":true,"text":"Plus another <param1> whose presence you cannot fully sense (<param2> total).","actions":[{"action":"if","cond-type1":"variable","cond-val1":"gagall","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"gag"},{"action":"variable","varname":"gagall","valtype":"value","value":"1","op":"add"},{"action":"script","script":"gagValue = get_variable('gagall');\n\nif (gagValue > 6)\n{\n    gagValue = 0;\n    set_variable('gagall', 0);\n    display_notice(\"Processing complete.\", \"blue\", \"black\");\n}\nelse\n{\n  \n        switch(to_number(gagValue)) \n        {\n            case 1:\n               \n                break;\n            case 2:\n                 send_command('qw cyrene');\n                break;\n            case 3:\n                send_command('qw eleusis')\n                break;\n            case 4:\n                send_command('qw hashan')\n                break;\n            case 5:\n                send_command('qw mhaldor')\n                break;\n            case 6:\n                send_command('qw targossas')\n                break;                \n        }\n    \n    \n}\n\n\n"}]},{"type":"trigger","name":"Process and Gag City Members","enabled":true,"id":30,"matching":"substring","whole_words":false,"case_sensitive":false,"text":".","actions":[{"action":"if","cond-type1":"variable","cond-val1":"gagall","cond-type2":"value","cond-val2":"0","cond-op":"greater","cond-mod":"","cond-cs":false,"dothen":"continue","doelse":"stop","dothenlabel":"","doelselabel":""},{"action":"script","script":"if (current_text().indexOf(\"whose presence\") == -1)\n{\n\n\n    memberList = get_variable('cityMembers');  \n    gagValue = get_variable('gagall');\n\n    namesArray = (current_text()).split(\", \");\n\n\n    namesArray[namesArray.length-1] = namesArray[namesArray.length-1].replace(\"and \", \"\");\n    namesArray[namesArray.length-1] = namesArray[namesArray.length-1].replace(\".\", \"\");\n\n\n    for (nameCount = 0; nameCount < namesArray.length; nameCount++)\n    {\n    \n        switch(to_number(gagValue)) \n            {\n                case 1:\n                    if (memberList.ashtan.indexOf(namesArray[nameCount]) == -1)\n                        memberList.ashtan.push(namesArray[nameCount]);\n                    break;\n                case 2:\n                    if (memberList.cyrene.indexOf(namesArray[nameCount]) == -1)\n                        memberList.cyrene.push(namesArray[nameCount]);\n                    break;\n                case 3:\n                    if (memberList.eleusis.indexOf(namesArray[nameCount]) == -1)\n                        memberList.eleusis.push(namesArray[nameCount]);  \n                    break\n                case 4:\n                    if (memberList.hashan.indexOf(namesArray[nameCount]) == -1)\n                        memberList.hashan.push(namesArray[nameCount]);\n                    break;\n                case 5:\n                    if (memberList.mhaldor.indexOf(namesArray[nameCount]) == -1)\n                        memberList.mhaldor.push(namesArray[nameCount]);\n                    break;              \n                case 6:\n                    if (memberList.targossas.indexOf(namesArray[nameCount]) == -1)\n                        memberList.targossas.push(namesArray[nameCount]);\n                    break;\n                default:\n                \n                    break;\n                \n    \n            }\n    }  \n\n\n\n\n    set_variable('cityMembers', memberList);\n}"},{"action":"gag"}]},{"type":"trigger","name":"Scan Everything","enabled":true,"id":64,"matching":"begins","whole_words":false,"case_sensitive":false,"text":"<anything>","actions":[{"action":"script","script":"gagValue = get_variable(\"gagall\");                                               \n\nif ((client.current_line.parsed_line != undefined) && (gagValue == 0))\n{    \n    textBlock = current_text();\n    cityMemTemp = get_variable('cityMembers');\n    color = \"\";\n    for (cityCounter = 1; cityCounter < 7; cityCounter++)\n    {\n        //SELECT CITY\n        switch (cityCounter)\n        {\n            case 1:\n                playerList = cityMemTemp.ashtan;\n                color = \"yellow\";\n                break;\n            case 2:\n                playerList = cityMemTemp.cyrene;\n                color = \"cornflowerblue\";\n                break;\n            case 3:\n                playerList = cityMemTemp.eleusis;\n                color = \"green\";\n                break;\n            case 4:\n                playerList = cityMemTemp.hashan;\n                color = \"purple\";\n                break;\n            case 5:\n                playerList = cityMemTemp.mhaldor;\n                color = \"red\";\n                break;\n            case 6:\n                playerList = cityMemTemp.targossas;\n                color = \"white\";\n                break;   \n        }\n                \n        for (playerCounter = 0; playerCounter < playerList.length; playerCounter++)\n        {\n            rawText = playerList[playerCounter];\n            withComma = playerList[playerCounter] + \",\";\n            withPeriod = playerList[playerCounter] + \".\";\n            \n            startLoc = textBlock.indexOf(playerList[playerCounter]);\n            playerLength = playerList[playerCounter].length;\n            if (((textBlock.indexOf(rawText) != -1) || (textBlock.indexOf(withComma) != -1) || (textBlock.indexOf(withPeriod) != -1)) && (textBlock[startLoc+playerLength] == \" \" || textBlock[startLoc+playerLength] == \".\" || textBlock[startLoc+playerLength] == \",\" || textBlock[startLoc+playerLength] == \"\\'\" || textBlock[startLoc+playerLength] == \"!\" || textBlock[startLoc+playerLength] == \"?\"))\n\n                {\n                replace_current_line(startLoc, playerLength, rawText, color, \"black\");\n           }\n\n          \n          }\n        \n\n        }\n         \n}"}]},{"type":"trigger","name":"gag None.","enabled":true,"id":69,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"None.","actions":[{"action":"gag"}]},{"type":"alias","name":"SaveCities - Save city database","enabled":true,"id":70,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"cityMembersTemp = get_variable('cityMembers')\nset_variable('cityMembersSaved', cityMembersTemp);\ndisplay_notice(\"City member information saved.\", \"blue\", \"black\")"}],"text":"savecities"},{"type":"alias","name":"LoadCities - Load city database","enabled":true,"id":71,"matching":"exact","whole_words":false,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"cityMembersSavedTemp = get_variable('cityMembersSaved');\nset_variable('cityMembers', cityMembersSavedTemp);\ndisplay_notice(\"City member information loaded from save.\", \"blue\", \"black\")"}],"text":"loadcities"},{"type":"alias","name":"ResetCities - Clear all city information","enabled":true,"id":65,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"cityMemTemp = {ashtan:[], cyrene:[], eleusis:[], hashan:[], mhaldor:[], targossas:[]};\ncityMemTemp2 = {ashtan:[], cyrene:[], eleusis:[], hashan:[], mhaldor:[], targossas:[]};\nset_variable('cityMembers', cityMemTemp);\nset_variable('cityMembersSaved', cityMemTemp2);\ndisplay_notice(\"City member information reset.\", \"blue\", \"black\");"}],"text":"ResetCities"},{"type":"alias","name":"CityAdd - Add member to city","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"cityName = args[1].toLowerCase();\n\nadventurerName = args[2].charAt(0).toUpperCase() + args[2].slice(1).toLowerCase();\n\nmemberList = get_variable('cityMembers');\n\nswitch(cityName)                                                                          \n            {\n                case \"ashtan\":\n                    if (memberList.ashtan.indexOf(adventurerName) == -1)\n                    {\n                        memberList.ashtan.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Ashtan.\", \"blue\", \"black\");\n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Ashtan!\", \"orange\", \"black\");\n                    break;\n                case \"cyrene\":\n                    if (memberList.cyrene.indexOf(adventurerName) == -1)\n                    {\n                        memberList.cyrene.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Cyrene.\", \"blue\", \"black\");\n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Cyrene!\", \"orange\", \"black\");\n                    break;\n                case \"eleusis\":\n                    if (memberList.eleusis.indexOf(adventurerName) == -1)\n                    {\n                        memberList.eleusis.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Eleusis.\", \"blue\", \"black\");   \n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Eleusis!\", \"orange\", \"black\");\n                    break\n                case \"hashan\":\n                    if (memberList.hashan.indexOf(adventurerName) == -1)\n                    {\n                        memberList.hashan.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Hashan.\", \"blue\", \"black\");\n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Hashan!\", \"orange\", \"black\");\n                    break;\n                case \"mhaldor\":\n                    if (memberList.mhaldor.indexOf(adventurerName) == -1)\n                    {\n                        memberList.mhaldor.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Mhaldor.\", \"blue\", \"black\");\n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Mhaldor!\", \"orange\", \"black\");\n                    break;              \n                case \"targossas\":\n                    if (memberList.targossas.indexOf(adventurerName) == -1)\n                    {\n                        memberList.targossas.push(adventurerName);\n                        display_notice(\"CityAdd: \" + adventurerName + \" has been added as a citizen of Targossas.\", \"blue\", \"black\");   \n                    }\n                    else\n                        display_notice(\"CityAdd: \" + adventurerName + \" is already a member of Targossas!\", \"orange\", \"black\");\n                    break;\n                default:\n                    display_notice(\"CityAdd: Unknown city: \" + args[1], \"orange\", \"black\");\n                    break;\n                \n    \n            }\nset_variable('cityMembers', memberList);\n"}],"text":"CityAdd <city> <adventurer>"},{"type":"alias","name":"CityDel - Remove member from city membership","enabled":true,"id":79,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"adventurerName = args[1].charAt(0).toUpperCase() + args[1].slice(1).toLowerCase();\n\nmemberList = get_variable('cityMembers');\n\n\nashtanLoc = memberList.ashtan.indexOf(adventurerName);\ncyreneLoc = memberList.cyrene.indexOf(adventurerName);\neleusisLoc = memberList.eleusis.indexOf(adventurerName);\nhashanLoc = memberList.hashan.indexOf(adventurerName);\nmhaldorLoc = memberList.mhaldor.indexOf(adventurerName);\ntargossasLoc = memberList.targossas.indexOf(adventurerName);\n\nfoundCity = ((ashtanLoc != -1) || (cyreneLoc != -1) || (eleusisLoc != -1) || (hashanLoc != -1) || mhaldorLoc != -1 || (targossasLoc != -1));\n\n\nif (ashtanLoc != -1)\n    {\n        memberList.ashtan.splice(ashtanLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Ashtan citizen list.\", \"blue\", \"black\");\n    }\n\n\nif (cyreneLoc != -1)\n    {\n        memberList.cyrene.splice(cyreneLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Cyrene citizen list.\", \"blue\", \"black\");\n    }\n         \n           \nif (eleusisLoc != -1)\n    {\n        memberList.eleusis.splice(eleusisLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Eleusis citizen list.\", \"blue\", \"black\");   \n    }\n\nif (hashanLoc != -1)\n    {\n        memberList.hashan.splice(hashanLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Hashan citizen list.\", \"blue\", \"black\");\n    }\n         \n                \nif (mhaldorLoc != -1)\n    {\n        memberList.mhaldor.splice(mhaldorLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Mhaldor citizen list.\", \"blue\", \"black\");\n    }\n\n\nif (targossasLoc != -1)\n    {\n        memberList.targossas.splice(targossasLoc, 1);\n        display_notice(\"CityDel: \" + adventurerName + \" has been removed from the Targossas citizen list.\", \"blue\", \"black\");   \n    }\n\nif (foundCity == 0)\n    display_notice(\"CityDel: \" + adventurerName + \" was not found on any city's citizen list.\", \"blue\", \"black\");\n\nset_variable('cityMembers', memberList);"}],"text":"CityDel <adventurer>"},{"type":"alias","name":"CityMaint - Perform city data maintenance","enabled":true,"id":80,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"memberList = get_variable('cityMembers');\n\nplayerList = [];\n\nduplicateList = [];\n\ndisplay_notice(\"CityMaint: Beginning city membership list maintenance.\", \"green\", \"black\");\n\n//FIND DUPLICATES\nfor (playerCount = 0; playerCount < memberList.ashtan.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.ashtan[playerCount]) == -1)\n        playerList.push(memberList.ashtan[playerCount]);\n    else\n        duplicateList.push(memberList.ashtan[playerCount]);\n}    \n    \nfor (playerCount = 0; playerCount < memberList.cyrene.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.cyrene[playerCount]) == -1)\n        playerList.push(memberList.cyrene[playerCount]);\n    else\n        duplicateList.push(memberList.cyrene[playerCount]);\n}    \n   \nfor (playerCount = 0; playerCount < memberList.eleusis.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.eleusis[playerCount]) == -1)\n        playerList.push(memberList.eleusis[playerCount]);\n    else\n        duplicateList.push(memberList.eleusis[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.hashan.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.hashan[playerCount]) == -1)\n        playerList.push(memberList.hashan[playerCount]);\n    else\n        duplicateList.push(memberList.hashan[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.mhaldor.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.mhaldor[playerCount]) == -1)\n        playerList.push(memberList.mhaldor[playerCount]);\n    else\n        duplicateList.push(memberList.mhaldor[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.targossas.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.targossas[playerCount]) == -1)\n        playerList.push(memberList.targossas[playerCount]);\n    else\n        duplicateList.push(memberList.targossas[playerCount]);\n}    \n\n//REMOVE DUPLICATES\nfor (duplicateCount = 0; duplicateCount < duplicateList.length; duplicateCount++)\n{\n    \n    \n    ashtanLoc = memberList.ashtan.indexOf(duplicateList);\n    if (ashtanLoc != -1)\n    {\n        memberList.ashtan.splice(ashtanLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Ashtan.\", \"green\", \"black\");\n    }\n    \n    \n    cyreneLoc = memberList.cyrene.indexOf(duplicateList);\n    if (cyreneLoc != -1)\n    {\n        memberList.cyrene.splice(cyreneLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Cyrene.\", \"green\", \"black\");\n    }\n\n\n    eleusisLoc = memberList.eleusis.indexOf(duplicateList);\n    if (eleusisLoc != -1)\n    {\n        memberList.eleusis.splice(eleusisLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Eleusis.\", \"green\", \"black\");        \n    }\n\n\n    hashanLoc = memberList.hashan.indexOf(duplicateList);\n    if (hashanLoc != -1)\n    {\n        memberList.hashan.splice(hashanLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Hashan.\", \"green\", \"black\");\n    }\n\n\n    mhaldorLoc = memberList.mhaldor.indexOf(duplicateList);\n    if (mhaldorLoc != -1)\n    {\n        memberList.mhaldor.splice(mhaldorLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Mhaldor.\", \"green\", \"black\"); \n    }\n\n\n    targossasLoc = memberList.targossas.indexOf(duplicateList);\n    if (targossasLoc != -1)\n    {\n        memberList.targossas.splice(targossasLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Targossas.\", \"green\", \"black\"); \n    }    \n\n}\n\n//REMOVE INVALID ENTRIES\nfor (playerCount = memberList.ashtan.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.ashtan[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.ashtan[playerCount] + \" was an invalid entry and has been removed as a citizen of Ashtan.\", \"green\");\n        memberList.ashtan.splice(playerCount, 1);\n    }\n}\n\nfor (playerCount = memberList.cyrene.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.cyrene[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.cyrene[playerCount] + \" was an invalid entry and has been removed as a citizen of Cyrene.\", \"green\");\n        memberList.cyrene.splice(playerCount, 1);\n    }\n}\n\nfor (playerCount = memberList.eleusis.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.eleusis[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.eleusis[playerCount] + \" was an invalid entry and has been removed as a citizen of Eleusis.\", \"green\");\n        memberList.eleusis.splice(playerCount, 1);\n    }\n}\n\nfor (playerCount = memberList.hashan.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.hashan[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.hashan[playerCount] + \" was an invalid entry and has been removed as a citizen of Hashan.\", \"green\");\n        memberList.hashan.splice(playerCount, 1);\n    }\n}\n\nfor (playerCount = memberList.mhaldor.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.mhaldor[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.mhaldor[playerCount] + \" was an invalid entry and has been removed as a citizen of Mhaldor.\", \"green\");\n        memberList.mhaldor.splice(playerCount, 1);\n    }\n}\n\nfor (playerCount = memberList.targossas.length-1; playerCount >= 0; playerCount--)\n{\n    if (memberList.targossas[playerCount].split(\" \").length > 1)\n    {\n\tclient.print(\"CityMaint: \" + memberList.targossas[playerCount] + \" was an invalid entry and has been removed as a citizen of Targossas.\", \"green\");\n        memberList.targossas.splice(playerCount, 1);\n    }\n}\n\n\n\n\n//ALPHEBETIZE LISTS\nmemberList.ashtan.sort();\nmemberList.cyrene.sort();\nmemberList.eleusis.sort();\nmemberList.hashan.sort();\nmemberList.mhaldor.sort();\nmemberList.targossas.sort();\n\nset_variable('cityMembers', memberList);\n\ndisplay_notice(\"CityMaint: City membership list maintenance completed.\", \"green\", \"black\");\n"}],"text":"CityMaint"},{"type":"alias","name":"CityList - List members of all cities","enabled":true,"id":81,"matching":"begins","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"membersList = get_variable('cityMembers');\n\nclient.print(\"City membership list\", \"cornflowerblue\");\nclient.print(\"--------------------\", \"cornflowerblue\");\nplayerList = \"\";\nfor (counter = 0; counter < membersList.ashtan.length; counter++)\n    if (counter == 0)\n        playerList = membersList.ashtan[counter];\n    else\n        playerList = playerList + \", \" + membersList.ashtan[counter];\nclient.print(\"Ashtan: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n\n\nplayerList = \"\";\nfor (counter = 0; counter < membersList.cyrene.length; counter++)\n    if (counter == 0)\n        playerList = membersList.cyrene[counter];\n    else\n        playerList = playerList + \", \" + membersList.cyrene[counter];\nclient.print(\"Cyrene: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n\nplayerList = \"\";\nfor (counter = 0; counter < membersList.eleusis.length; counter++)\n    if (counter == 0)\n        playerList = membersList.eleusis[counter];\n    else\n        playerList = playerList + \", \" + membersList.eleusis[counter];\nclient.print(\"Eleusis: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n\nplayerList = \"\";\nfor (counter = 0; counter < membersList.hashan.length; counter++)\n    if (counter == 0)\n        playerList = membersList.hashan[counter];\n    else\n        playerList = playerList + \", \" + membersList.hashan[counter];\nclient.print(\"Hashan: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n\n\nplayerList = \"\";\nfor (counter = 0; counter < membersList.mhaldor.length; counter++)\n    if (counter == 0)\n        playerList = membersList.mhaldor[counter];\n    else\n        playerList = playerList + \", \" + membersList.mhaldor[counter];\nclient.print(\"Mhaldor: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n\nplayerList = \"\";\nfor (counter = 0; counter < membersList.targossas.length; counter++)\n    if (counter == 0)\n        playerList = membersList.targossas[counter];\n    else\n        playerList = playerList + \", \" + membersList.targossas[counter];\nclient.print(\"Targossas: \" + playerList + \"\\n\\n\", \"cornflowerblue\");\n"}],"text":"CityList"},{"type":"alias","name":"CityMaint - Perform city data maintenance","enabled":true,"id":83,"matching":"exact","whole_words":true,"case_sensitive":false,"prefix_suffix":true,"actions":[{"action":"script","script":"memberList = get_variable('cityMembers');                                                \nplayerList = [];\nduplicateList = [];\n\ndisplay_notice(\"CityMaint: Beginning city membership list maintenance.\", \"green\", \"black\");\n\n//FIND DUPLICATES\nfor (playerCount = 0; playerCount < memberList.ashtan.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.ashtan[playerCount]) == -1)\n        playerList.push(memberList.ashtan[playerCount]);\n    else\n        duplicateList.push(memberList.ashtan[playerCount]);\n}    \n    \nfor (playerCount = 0; playerCount < memberList.cyrene.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.cyrene[playerCount]) == -1)\n        playerList.push(memberList.cyrene[playerCount]);\n    else\n        duplicateList.push(memberList.cyrene[playerCount]);\n}    \n   \nfor (playerCount = 0; playerCount < memberList.eleusis.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.eleusis[playerCount]) == -1)\n        playerList.push(memberList.eleusis[playerCount]);\n    else\n        duplicateList.push(memberList.eleusis[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.hashan.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.hashan[playerCount]) == -1)\n        playerList.push(memberList.hashan[playerCount]);\n    else\n        duplicateList.push(memberList.hashan[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.mhaldor.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.mhaldor[playerCount]) == -1)\n        playerList.push(memberList.mhaldor[playerCount]);\n    else\n        duplicateList.push(memberList.mhaldor[playerCount]);\n}    \n\nfor (playerCount = 0; playerCount < memberList.targossas.length; playerCount++)\n{\n    if (playerList.indexOf(memberList.targossas[playerCount]) == -1)\n        playerList.push(memberList.targossas[playerCount]);\n    else\n        duplicateList.push(memberList.targossas[playerCount]);\n}    \n\n//REMOVE DUPLICATES\nfor (duplicateCount = 0; duplicateCount < duplicateList.length; duplicateCount++)\n{\n    ashtanLoc = memberList.ashtan.indexOf(duplicateList);\n    if (ashtanLoc != -1)\n    {\n        memberList.ashtan.splice(ashtanLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Ashtan.\", \"green\", \"black\");        \n    }\n        \n    cyreneLoc = memberList.cyrene.indexOf(duplicateList);\n    if (cyreneLoc != -1)\n    {\n        memberList.cyrene.splice(cyreneLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Cyrene.\", \"green\", \"black\");        \n    }\n\n    eleusisLoc = memberList.eleusis.indexOf(duplicateList);\n    if (eleusisLoc != -1)\n    {\n        memberList.eleusis.splice(eleusisLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Eleusis.\", \"green\", \"black\");        \n    }\n\n\n    hashanLoc = memberList.hashan.indexOf(duplicateList);\n    if (hashanLoc != -1)\n    {\n        memberList.hashan.splice(hashanLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Hashan.\", \"green\", \"black\");        \n    }\n\n \n    mhaldorLoc = memberList.mhaldor.indexOf(duplicateList);\n    if (mhaldorLoc != -1)\n    {\n        memberList.mhaldor.splice(mhaldorLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Mhaldor.\", \"green\", \"black\");        \n    }\n\n\n    targossasLoc = memberList.targossas.indexOf(duplicateList);\n    if (targossasLoc != -1)\n    {\n        memberList.targossas.splice(targossasLoc, 1);\n        display_notice(\"CityMaint: \" + adventurerName + \" was a duplicate and has been removed as a citizen of Targossas.\", \"green\", \"black\");        \n    }    \n \n}\n\n//ALPHEBETIZE LISTS\nmemberList.ashtan.sort();\nmemberList.cyrene.sort();\nmemberList.eleusis.sort();\nmemberList.hashan.sort();\nmemberList.mhaldor.sort();\nmemberList.targossas.sort();\n\nset_variable('cityMembers', memberList);\n\ndisplay_notice(\"CityMaint: City membership list maintenance completed.\", \"green\", \"black\");\n"}],"text":"CityMaint"}]}]}